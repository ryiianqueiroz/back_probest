import joblib
import numpy as np
from sklearn.naive_bayes import GaussianNB

# Simulação de dataset para treinamento (substituindo pandas por listas e arrays numpy)
num_samples = 100
Álcool = np.random.rand(num_samples)
Ácido_Málico = np.random.rand(num_samples)
Cinza = np.random.rand(num_samples)
Alcalinidade_das_Cinzas = np.random.rand(num_samples)
Magnésio = np.random.rand(num_samples)
Fenóis_Totais = np.random.rand(num_samples)
Flavonoides = np.random.rand(num_samples)
Fenois_não_Flavonoides = np.random.rand(num_samples)
Intensidade_Cor = np.random.rand(num_samples)
Matiz = np.random.rand(num_samples)
OD280_OD315_Vinhos_Diluídos = np.random.rand(num_samples)
Prolina = np.random.rand(num_samples)
Classe = np.random.choice(["A", "B", "C"], num_samples)

# Organizar os dados em arrays numpy
X_train = np.column_stack((Álcool, Ácido_Málico, Cinza, Alcalinidade_das_Cinzas, Magnésio,
                           Fenóis_Totais, Flavonoides, Fenois_não_Flavonoides, Intensidade_Cor,
                           Matiz, OD280_OD315_Vinhos_Diluídos, Prolina))
y_train = Classe

# Treinar o modelo
model = GaussianNB()
model.fit(X_train, y_train)

# Salvar o modelo compactado
joblib.dump(model, 'modelo.pkl', compress=3)
